Description: >-
  AutoScaling testing

Parameters:

  InstanceType:
    Description: Instance type which will be created
    Type: String
    Default: t1.micro

  DesiredCount:
    Description: Number of  Instance that will be launched
    Type: String
    Default: 3

  CountMin:
    Description: Minimum number of instances that will be launched
    Type: String
    Default: 1

  CountMax:
    Description: Maximum number of instances that can be launched
    Type: String
    Default: 5

  DiskThreshold:
    Description: Disk threashold in number range 1-100 to fire alarm
    Type: Number
    Default: 40

  AvailabilityZone:
    Description: AZ for instances inside AutoScaling Group
    Type: String

  SubnetName:
    Description: Subnet name for instances inside AutoScaling Group
    Type: String

  ImageIDForASGNodes:
    Description: Image/AMI ID to use when deploying ASG instances. Default is set to Ubuntu in Ireland Region
    Type: String
    Default: ami-58d7e821



Resources:
  SGForASGNodes:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: asg-scalein-sg
      GroupDescription: To allow outbound traffic
      VpcId: !ImportValue Infra-VPC
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.0.0/8
  InstanceProfileSetup:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: asg-scalein-instance-profile
      Path: /
      Roles:
        - !Ref RoleCreation
  RoleCreation:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service:
                - ec2.amazonaws.com
      Policies:
        - PolicyName: asg-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:DescribeTags'
                  - 'ec2:DescribeInstances'
                  - 'cloudwatch:PutMetricData'
                  - 'cloudwatch:GetMetricStatistics'
                  - 'cloudwatch:ListMetrics'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:AttachVolume'
                  - 'ec2:DetachVolume'
                  - 'ec2:DeleteVolume'
                  - 'ec2:CreateTags'
                  - 'ec2:CreateVolume'
                  - 'autoscaling:SetInstanceHealth'
                  - 'S3:Get*'
                  - 'S3:List*'
                Resource:
                  - '*'
  AutoScalingConfig:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier:
        - !Ref SubnetName
      AvailabilityZones:
        - !Ref AvailabilityZone
      LaunchConfigurationName: !Ref LaunchConfig
      DesiredCapacity: !Ref DesiredCount
      MinSize: !Ref CountMin
      MaxSize: !Ref CountMax
      HealthCheckType: EC2
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn:
      - InstanceProfileSetup
      - SGForASGNodes
    Properties:
      ImageId: !Ref ImageIDForASGNodes
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfileSetup
      SecurityGroups:
        - !Ref SGForASGNodes
      UserData: 
        Fn::Base64: !Sub |
              #!/bin/bash
              sudo snap install amazon-ssm-agent --classic
              sudo apt-get update -y
              wget https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip
              apt install unzip
              unzip AmazonCloudWatchAgent.zip
              sudo ./install.sh
              cat >> /opt/aws/amazon-cloudwatch-agent/bin/config.json << EOL
              {
                  "agent": {
                      "metrics_collection_interval": 60,
                      "run_as_user": "cwagent"
                  },
                  "metrics": {
                      "append_dimensions": {
                          "AutoScalingGroupName":  "\${!aws:AutoScalingGroupName}"
                      },
                      "metrics_collected": {
                          "disk": {
                              "measurement": [
                                  "used_percent"
                              ],
                              "metrics_collection_interval": 60,
                              "resources": [
                                  "/"
                              ]
                          },
                          "mem": {
                              "measurement": [
                                  "mem_used_percent"
                              ],
                              "metrics_collection_interval": 60
                          }
                      }
                  }
              }
              EOL

              sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json -s
  ######### Scaling Policy to scale up ########
  ScaleUpPolicyDataNode:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName:
        Ref: AutoScalingConfig
      Cooldown: '300'
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        TargetValue: !Ref DiskThreshold
        DisableScaleIn: true
        CustomizedMetricSpecification:
          MetricName: 'disk_used_percent'
          Namespace: 'CWAgent'
          Statistic: 'Average'
          Unit:      'Percent'
          Dimensions:
          - Name: AutoScalingGroupName
            Value:
              Ref: AutoScalingConfig
          - Name: device
            Value: 'xvda1'
          - Name: fstype
            Value: 'ext4'
          - Name: path
            Value: '/'       